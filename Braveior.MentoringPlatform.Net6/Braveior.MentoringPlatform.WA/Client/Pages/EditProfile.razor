@namespace Braveior.MentoringPlatform.WA.Client.Pages
@inject ISnackbar Snackbar
@inject Blazored.LocalStorage.ILocalStorageService localStorageService
@inject IProfileService ProfileService
    <MudDialog>
        <TitleContent>
            <MudText Typo="Typo.h6">
                Edit Profile
            </MudText>
        </TitleContent>
        <DialogContent>
            <MudTextField T="string" Variant="Variant.Outlined" Label="FirstName" @bind-Value="Student.FirstName" />
            <MudTextField T="string" Variant="Variant.Outlined" Label="LastName" @bind-Value="Student.LastName" />
            <MudTextField T="string" Variant="Variant.Outlined" Label="About myself" @bind-Value="Student.Description" Lines="8" />
            <MudTextField T="string" Variant="Variant.Outlined" Label="LinkedIn" @bind-Value="Student.LinkedInUrl" />
            <MudCheckBox Label="Allow Display" @bind-Checked="@Student.Display" Size="Size.Medium" Color="Color.Primary"></MudCheckBox>
            <AuthorizeView Roles="2">
                <Authorized>
                    <MudTextField T="string" Variant="Variant.Outlined" Label="Email Address" @bind-Value="Student.Email" />
                    <MudCheckBox Label="Braveior Champion" @bind-Checked="@Student.IsLeader" Size="Size.Medium" Color="Color.Primary"></MudCheckBox>
                </Authorized>
            </AuthorizeView>
        </DialogContent>
        <DialogActions>
            <MudButton Variant="Variant.Filled" Size="MudBlazor.Size.Small" Color="Color.Primary" OnClick="@(() => UpdateProfile())">Update Profile</MudButton>
            <MudButton Variant="Variant.Filled" Size="MudBlazor.Size.Small" Color="Color.Default" OnClick="Cancel">Close</MudButton>
        </DialogActions>
    </MudDialog>


    @code {

        [CascadingParameter] MudDialogInstance MudDialog { get; set; }

        [Parameter] public UserDTO Student { get; set; }

        private void Cancel()
        {
            MudDialog.Cancel();
        }
        protected override async Task OnInitializedAsync()
        {

        }

        private async Task UpdateProfile()
        {
            try
            {
                await ProfileService.UpdateUserProfile(Student);
                MudDialog.Close();
            }
            catch (Exception ex)
            {
                Snackbar.Clear();
                Snackbar.Add("Error", Severity.Error);
            }
        }


    }