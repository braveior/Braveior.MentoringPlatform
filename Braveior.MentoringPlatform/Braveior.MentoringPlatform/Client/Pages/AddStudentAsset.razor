@namespace Braveior.MentoringPlatform.Client.Pages
@inject ISnackbar Snackbar
@inject Blazored.LocalStorage.ILocalStorageService localStorageService
@inject IProfileService ProfileService
    <MudDialog>
        <TitleContent>
            <MudText Typo="Typo.h6">
                Add Student Asset
            </MudText>
        </TitleContent>
        <DialogContent>
            <MudRadioGroup @bind-SelectedOption="@StudentAsset.Type">
                <MudRadio Option="@(5)" Color="Color.Primary">Blog</MudRadio>
                <MudRadio Option="@(6)" Color="Color.Secondary">Vlog</MudRadio>
            </MudRadioGroup>

            <MudTextField T="string" Variant="Variant.Outlined" Label="Name" @bind-Value="@StudentAsset.AssetName" />
            <MudTextField T="string" Variant="Variant.Outlined" Label="Description" @bind-Value="@StudentAsset.AssetDescription" />
            <MudTextField T="string" Variant="Variant.Outlined" Label="URL" @bind-Value="@StudentAsset.AssetUrl" />
            <AuthorizeView Roles="2">
                <Authorized>
                    <MudTextField T="long" Variant="Variant.Outlined" @bind-Value="@StudentAsset.Points" />
                    <MudRadioGroup @bind-SelectedOption="@StudentAsset.Status">
                        <MudRadio Option="@(0)" Color="Color.Primary">Pending</MudRadio>
                        <MudRadio Option="@(1)" Color="Color.Secondary">Approved</MudRadio>
                    </MudRadioGroup>
                </Authorized>
            </AuthorizeView>
        </DialogContent>
        <DialogActions>
            <MudButton Variant="Variant.Filled" Size="MudBlazor.Size.Small" Color="Color.Primary" OnClick="@(() => CreateStudentAsset())">Add Asset</MudButton>
            <MudButton Variant="Variant.Filled" Size="MudBlazor.Size.Small" Color="Color.Default" OnClick="Cancel">Close</MudButton>
        </DialogActions>
    </MudDialog>


    @code {
        private SkillDTO skill;

        //private long points = 0;

        //private int status = 0;

        [CascadingParameter] MudDialogInstance MudDialog { get; set; }

        [Parameter] public StudentActivityDTO StudentAsset { get; set; }

        private void Cancel()
        {
            MudDialog.Cancel();
        }
        private async Task CreateStudentAsset()
        {
            try
            {
                await ProfileService.AddStudentAsset(StudentAsset);
                MudDialog.Close();
            }
            catch (Exception ex)
            {
                Snackbar.Clear();
                Snackbar.Add("Error", Severity.Error);
            }
        }


    }