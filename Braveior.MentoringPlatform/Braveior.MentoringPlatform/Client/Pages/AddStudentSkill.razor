@namespace Braveior.MentoringPlatform.Client.Pages
@inject ISnackbar Snackbar
@inject Blazored.LocalStorage.ILocalStorageService localStorageService
@inject IProfileService ProfileService
    <MudDialog>
        <TitleContent>
            <MudText Typo="Typo.h6">
                Add Skill
            </MudText>
        </TitleContent>
        <DialogContent>
            <MudAutocomplete T="SkillDTO" Label="Choose Skill" @bind-Value="skill" SearchFunc="@SearchSkills" ToStringFunc="@(e=> e==null?null : $" {e.Name}")" AdornmentIcon="@Icons.Material.Filled.Search" AdornmentColor="Color.Primary" />
            <MudTextField T="int" Variant="Variant.Outlined" @bind-Value="UserSkill.Stars" />
        </DialogContent>
        <DialogActions>
            <MudButton Variant="Variant.Filled" Size="MudBlazor.Size.Small" Color="Color.Primary" OnClick="@(() => CreateSkill())">Add Skill</MudButton>
            <MudButton Variant="Variant.Filled" Size="MudBlazor.Size.Small" Color="Color.Default" OnClick="Cancel">Close</MudButton>
        </DialogActions>
    </MudDialog>


    @code {
        private SkillDTO skill;

        [CascadingParameter] MudDialogInstance MudDialog { get; set; }

        [Parameter] public UserSkillDTO UserSkill { get; set; }

        private void Cancel()
        {
            MudDialog.Cancel();
        }
        protected override async Task OnInitializedAsync()
        {

        }

        private async Task<IEnumerable<SkillDTO>> SearchSkills(string key)
        {
            return await ProfileService.GetSkills(key);
        }
        private async Task CreateSkill()
        {
            try
            {
                UserSkill.SkillId = skill.SkillId;
                await ProfileService.AddUserSkill(UserSkill);
                MudDialog.Close();
            }
            catch (Exception ex)
            {
                Snackbar.Clear();
                Snackbar.Add("Error", Severity.Error);
            }
        }


    }