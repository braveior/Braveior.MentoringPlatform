@page "/videobook"
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject NavigationManager NavigationManager
@inject Blazored.LocalStorage.ILocalStorageService localStorageService
@inject IProfileService ProfileService
@inject ISnackbar Snackbar

<MudGrid>
    <MudItem xs="4">
        <MudPaper Width="100%">
            <MudList Clickable="true" Dense="true" DisableGutters="true" SelectedItemChanged="@((e)=>SelectedVideoChanged(Convert.ToString(e.Tag)))">
                @foreach (var item in Videos)
                {
                    <MudListItem Text="@item.Name" Tag="@item.VideoId" />
                }
            </MudList>

        </MudPaper>
    </MudItem>
    <MudItem xs="8">
        <div style="padding:56.25% 0 0 0;position:relative;"><iframe src="@url" frameborder="0" allow="autoplay; fullscreen; picture-in-picture" allowfullscreen style="position:absolute;top:0;left:0;width:100%;height:100%;" title="Group Discussion - MCET Team B-Hybrid vs Native Development"></iframe></div>
    </MudItem>
</MudGrid>

@code {
    private List<StudentActivityDTO> ApprovalList = new List<StudentActivityDTO>();
    MudListItem SelectedVideo = new MudListItem();
    bool isShow;
    string url = string.Empty;
    bool success;
    InputType PasswordInput = InputType.Password;
    string PasswordInputIcon = Icons.Material.Filled.VisibilityOff;
    ClaimsPrincipal claimsPrincipal;
    MudForm frmLogin;
    List<VideoDTO> Videos = new List<VideoDTO>();


    //Global Authentication State to get the Login Status and data
    [CascadingParameter]
    private Task<AuthenticationState> authenticationStateTask { get; set; }

    [Inject]
    private IState<CommonState> CommonState { get; set; }

    protected override async Task OnInitializedAsync()
    {
        Videos.Add(new VideoDTO() { Name = "Web API", VideoId = "592231074" });
        Videos.Add(new VideoDTO() { Name = "Generate a ReactJS application using ngx Create-React-App", VideoId = "591412548" });
        Videos.Add(new VideoDTO() { Name = "Clean up of the generated ReactJS application and add dependencies", VideoId = "591412741" });
        Videos.Add(new VideoDTO() { Name = "Add a basic Material-UI app bar", VideoId = "591413317" });
        Videos.Add(new VideoDTO() { Name = "Create navigation between components", VideoId = "591413531" });
        Videos.Add(new VideoDTO() { Name = "Develop the ListTasks component and make api call to display the tasks", VideoId = "591413937" });
        Videos.Add(new VideoDTO() { Name = "Add the progress indicator material Ui component displayed during the api call", VideoId = "591415672" });
        Videos.Add(new VideoDTO() { Name = "Create the form to add tasks and make api call to submit the task to the database", VideoId = "591415757" });
        Videos.Add(new VideoDTO() { Name = "Add the snackbar to show the notification and layout alignments", VideoId = "591415946" });
        //url = $"https://player.vimeo.com/video/{videoId}?badge=0&amp;autopause=0&amp;player_id=0&amp;app_id=58479&amp;h=d379c76bf2";

    }

    private async Task SelectedVideoChanged(string val)
    {
        url = $"https://player.vimeo.com/video/{val}?badge=0&amp;autopause=0&amp;player_id=0&amp;app_id=58479&amp;h=d379c76bf2";
        StateHasChanged();
    }



}
