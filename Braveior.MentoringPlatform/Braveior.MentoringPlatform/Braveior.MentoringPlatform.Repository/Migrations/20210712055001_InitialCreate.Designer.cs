// <auto-generated />
using System;
using Braveior.MentoringPlatform.Repository.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Braveior.MentoringPlatform.Repository.Migrations
{
    [DbContext(typeof(BraveiorDBContext))]
    [Migration("20210712055001_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.7")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Braveior.MentoringPlatform.Repository.Models.Institution", b =>
                {
                    b.Property<long>("InstitutionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Country")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("District")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Pincode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("State")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("InstitutionId");

                    b.ToTable("Institutions");

                    b.HasData(
                        new
                        {
                            InstitutionId = 1L,
                            City = "Coimbatore",
                            Country = "India",
                            District = "Coimbatore",
                            Name = "Modern Engineering College",
                            Pincode = "641035",
                            State = "Tamilnadu",
                            Type = "College"
                        },
                        new
                        {
                            InstitutionId = 2L,
                            City = "Coimbatore",
                            Country = "India",
                            District = "Coimbatore",
                            Name = "West Arts College",
                            Pincode = "641035",
                            State = "Tamilnadu",
                            Type = "College"
                        });
                });

            modelBuilder.Entity("Braveior.MentoringPlatform.Repository.Models.Kanboard", b =>
                {
                    b.Property<long>("KanboardId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("InstitutionId")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("KanboardId");

                    b.HasIndex("InstitutionId");

                    b.ToTable("Kanboards");

                    b.HasData(
                        new
                        {
                            KanboardId = 1L,
                            InstitutionId = 1L,
                            Name = "Kube Assist -  Modern Engineering College "
                        },
                        new
                        {
                            KanboardId = 2L,
                            InstitutionId = 2L,
                            Name = "Kube Assist -  West Arts College"
                        });
                });

            modelBuilder.Entity("Braveior.MentoringPlatform.Repository.Models.Product", b =>
                {
                    b.Property<long>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ProductId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            ProductId = 1L,
                            Description = "",
                            Name = "Kube Assist"
                        },
                        new
                        {
                            ProductId = 2L,
                            Description = "",
                            Name = "Braveior Kanboard "
                        });
                });

            modelBuilder.Entity("Braveior.MentoringPlatform.Repository.Models.Task", b =>
                {
                    b.Property<long>("TaskId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ActualDays")
                        .HasColumnType("int");

                    b.Property<string>("Attachment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CompletionDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EstimatedDays")
                        .HasColumnType("int");

                    b.Property<long>("KanboardId")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("ProductId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("StoryPoint")
                        .HasColumnType("int");

                    b.HasKey("TaskId");

                    b.HasIndex("KanboardId");

                    b.HasIndex("ProductId");

                    b.ToTable("Tasks");

                    b.HasData(
                        new
                        {
                            TaskId = 1L,
                            ActualDays = 5,
                            CompletionDate = new DateTime(2021, 7, 12, 11, 20, 0, 309, DateTimeKind.Local).AddTicks(9288),
                            Description = "Task 1 description",
                            EstimatedDays = 10,
                            KanboardId = 1L,
                            Name = "Task 1",
                            ProductId = 1L,
                            StartDate = new DateTime(2021, 7, 12, 11, 20, 0, 308, DateTimeKind.Local).AddTicks(2039),
                            Status = "NOT-STARTED",
                            StoryPoint = 5
                        },
                        new
                        {
                            TaskId = 2L,
                            ActualDays = 5,
                            CompletionDate = new DateTime(2021, 7, 12, 11, 20, 0, 310, DateTimeKind.Local).AddTicks(758),
                            Description = "Task 2 description",
                            EstimatedDays = 10,
                            KanboardId = 1L,
                            Name = "Task 2",
                            ProductId = 1L,
                            StartDate = new DateTime(2021, 7, 12, 11, 20, 0, 310, DateTimeKind.Local).AddTicks(749),
                            Status = "NOT-STARTED",
                            StoryPoint = 5
                        },
                        new
                        {
                            TaskId = 3L,
                            ActualDays = 5,
                            CompletionDate = new DateTime(2021, 7, 12, 11, 20, 0, 310, DateTimeKind.Local).AddTicks(763),
                            Description = "Task 3 description",
                            EstimatedDays = 10,
                            KanboardId = 1L,
                            Name = "Task 3",
                            ProductId = 1L,
                            StartDate = new DateTime(2021, 7, 12, 11, 20, 0, 310, DateTimeKind.Local).AddTicks(761),
                            Status = "NOT-STARTED",
                            StoryPoint = 5
                        },
                        new
                        {
                            TaskId = 4L,
                            ActualDays = 5,
                            CompletionDate = new DateTime(2021, 7, 12, 11, 20, 0, 310, DateTimeKind.Local).AddTicks(768),
                            Description = "Task 4 description",
                            EstimatedDays = 10,
                            KanboardId = 1L,
                            Name = "Task 4",
                            ProductId = 1L,
                            StartDate = new DateTime(2021, 7, 12, 11, 20, 0, 310, DateTimeKind.Local).AddTicks(767),
                            Status = "NOT-STARTED",
                            StoryPoint = 5
                        },
                        new
                        {
                            TaskId = 5L,
                            ActualDays = 5,
                            CompletionDate = new DateTime(2021, 7, 12, 11, 20, 0, 310, DateTimeKind.Local).AddTicks(774),
                            Description = "Task 5 description",
                            EstimatedDays = 10,
                            KanboardId = 1L,
                            Name = "Task 5",
                            ProductId = 1L,
                            StartDate = new DateTime(2021, 7, 12, 11, 20, 0, 310, DateTimeKind.Local).AddTicks(773),
                            Status = "NOT-STARTED",
                            StoryPoint = 5
                        },
                        new
                        {
                            TaskId = 6L,
                            ActualDays = 5,
                            CompletionDate = new DateTime(2021, 7, 12, 11, 20, 0, 310, DateTimeKind.Local).AddTicks(778),
                            Description = "Task 6 description",
                            EstimatedDays = 10,
                            KanboardId = 1L,
                            Name = "Task 6",
                            ProductId = 1L,
                            StartDate = new DateTime(2021, 7, 12, 11, 20, 0, 310, DateTimeKind.Local).AddTicks(777),
                            Status = "NOT-STARTED",
                            StoryPoint = 5
                        },
                        new
                        {
                            TaskId = 7L,
                            ActualDays = 5,
                            CompletionDate = new DateTime(2021, 7, 12, 11, 20, 0, 310, DateTimeKind.Local).AddTicks(786),
                            Description = "Task 7 description",
                            EstimatedDays = 10,
                            KanboardId = 1L,
                            Name = "Task 7",
                            ProductId = 1L,
                            StartDate = new DateTime(2021, 7, 12, 11, 20, 0, 310, DateTimeKind.Local).AddTicks(784),
                            Status = "NOT-STARTED",
                            StoryPoint = 5
                        },
                        new
                        {
                            TaskId = 8L,
                            ActualDays = 5,
                            CompletionDate = new DateTime(2021, 7, 12, 11, 20, 0, 310, DateTimeKind.Local).AddTicks(789),
                            Description = "Task 8 description",
                            EstimatedDays = 10,
                            KanboardId = 1L,
                            Name = "Task 8",
                            ProductId = 1L,
                            StartDate = new DateTime(2021, 7, 12, 11, 20, 0, 310, DateTimeKind.Local).AddTicks(788),
                            Status = "NOT-STARTED",
                            StoryPoint = 5
                        },
                        new
                        {
                            TaskId = 9L,
                            ActualDays = 5,
                            CompletionDate = new DateTime(2021, 7, 12, 11, 20, 0, 310, DateTimeKind.Local).AddTicks(794),
                            Description = "Task 9 description",
                            EstimatedDays = 10,
                            KanboardId = 1L,
                            Name = "Task 9",
                            ProductId = 1L,
                            StartDate = new DateTime(2021, 7, 12, 11, 20, 0, 310, DateTimeKind.Local).AddTicks(793),
                            Status = "NOT-STARTED",
                            StoryPoint = 5
                        },
                        new
                        {
                            TaskId = 10L,
                            ActualDays = 5,
                            CompletionDate = new DateTime(2021, 7, 12, 11, 20, 0, 310, DateTimeKind.Local).AddTicks(799),
                            Description = "Task 10 description",
                            EstimatedDays = 10,
                            KanboardId = 1L,
                            Name = "Task 10",
                            ProductId = 1L,
                            StartDate = new DateTime(2021, 7, 12, 11, 20, 0, 310, DateTimeKind.Local).AddTicks(797),
                            Status = "NOT-STARTED",
                            StoryPoint = 5
                        });
                });

            modelBuilder.Entity("Braveior.MentoringPlatform.Repository.Models.User", b =>
                {
                    b.Property<long>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("InstitutionId")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Role")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.HasIndex("InstitutionId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            UserId = 1L,
                            Email = "ramesh@email.com",
                            InstitutionId = 1L,
                            Name = "Ramesh Kumar",
                            Password = "password",
                            Role = "student"
                        },
                        new
                        {
                            UserId = 2L,
                            Email = "mary@email.com",
                            InstitutionId = 2L,
                            Name = "Mary John",
                            Password = "password",
                            Role = "student"
                        });
                });

            modelBuilder.Entity("Braveior.MentoringPlatform.Repository.Models.Kanboard", b =>
                {
                    b.HasOne("Braveior.MentoringPlatform.Repository.Models.Institution", "Institution")
                        .WithMany()
                        .HasForeignKey("InstitutionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Institution");
                });

            modelBuilder.Entity("Braveior.MentoringPlatform.Repository.Models.Task", b =>
                {
                    b.HasOne("Braveior.MentoringPlatform.Repository.Models.Kanboard", "Kanboard")
                        .WithMany("Tasks")
                        .HasForeignKey("KanboardId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Braveior.MentoringPlatform.Repository.Models.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Kanboard");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("Braveior.MentoringPlatform.Repository.Models.User", b =>
                {
                    b.HasOne("Braveior.MentoringPlatform.Repository.Models.Institution", "Institution")
                        .WithMany()
                        .HasForeignKey("InstitutionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Institution");
                });

            modelBuilder.Entity("Braveior.MentoringPlatform.Repository.Models.Kanboard", b =>
                {
                    b.Navigation("Tasks");
                });
#pragma warning restore 612, 618
        }
    }
}
